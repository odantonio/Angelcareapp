/*
* Este arquivo é gerado automaticamente pelo flutterfire configure.
*
* Você terá que fazer alterações no Firebase. Para uma situação de emergência, a conta principal do Firebase está vinculada a minha conta google.
*
* Eu criei uma conta da AngelCorp, porém enquanto não houver a criação do site da angelcorp para que o google verifique a empresa, ela não tem
* muita utilidade. A conta da AngelCorp é uma conta que têm acesso, mas não tem como gerenciar o banco atual.
*
* A conta é uma conta Spark, sem custos. Mas que possibilita usar o banco. Para dar permissão à conta AngelCorp, precisava ser conta paga.
*
* Então aconselhor que vc que está recebendo o código, crie um novo banco dentro usando a AngelCorp. Rode o flutterfire configure para substituir
* as configurações abaixo.
* */

// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for ios - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyCfjrB_WZ3Xd-_isbuGerRX7tx0WtyguiQ',
    appId: '1:517984794103:android:45015bf5d06d4ca232aaf2',
    messagingSenderId: '517984794103',
    projectId: 'angelcare-project',
    storageBucket: 'angelcare-project.appspot.com',
  );
}
